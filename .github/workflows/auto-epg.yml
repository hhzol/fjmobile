name: auto update

on:
  workflow_dispatch:
  schedule:
  # auto update at 23:57,00:57 Beijing time
  # check at https://crontab.guru/
  - cron: "57 15,0 * * *" 
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set Timezone
        run: sudo timedatectl set-timezone 'Asia/Shanghai'
      
      - name: Get EPG by day
        run: |
          pwd
          python get-epg.py

      - name: Copy today's epg_ file to e.xml
        run: |
          # 获取今天的日期
          today=$(date '+%Y%m%d')
    
          # 查找以 epg_ 开头且日期为今天的文件
          for file in epg_${today}.xml; do
            if [ -f "$file" ]; then
              echo "找到今天的EPG文件: $file"
              cp "$file" e.xml
              echo "已生成 e.xml"
              break
            else
              echo "没有找到今天的 EPG 文件: epg_${today}.xml"
            fi
          done

      - name: Remove old EPG files (older than 7 days)
        run: |
          find . -type f -name 'epg_*.xml' | while read file; do
          filename=$(basename "$file")
          date_str=$(echo "$filename" | sed -E 's/epg_([0-9]{8})\.xml/\1/')
          file_date=$(date -d "$date_str" +%s 2>/dev/null || true)
          if [ -z "$file_date" ]; then
             echo "无法解析日期: $filename"
          continue
          fi
          threshold_date=$(date -d "7 days ago" +%s)
          if [ "$file_date" -lt "$threshold_date" ]; then
            echo "删除过期文件: $file"
            rm -f "$file"
          fi
          done

      - name: Merge EPG files
        run: |
          pwd
          python merge.py

      - name: Download e.erw.cc EPGs
        run: |
          wget -O sources.xml.gz https://raw.githubusercontent.com/kuke31/xmlgz/refs/heads/main/all.xml.gz
          gunzip -c sources.xml.gz > sources.xml
          echo "已下载e.erw.cc节目单并解压为 sources.xml"
          
      - name: Merge more files
        run: |
          pwd
          python extra.py
          find . -name "more.xml" -exec xmllint --format --encode UTF-8 --output {} {} \;
          
      - name: Compress epg files and delete interim files
        run: |
          gzip -c e.xml > e.xml.gz
          gzip -c all.xml > all.xml.gz
          gzip -c more.xml > more.xml.gz
          rm -f sources.xml sources.xml.gz
          
      - name: Commit changes
        run: |
          git config --local user.email "github-actions-bot@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          git diff-index --quiet HEAD || git commit -m "🚀 update epg file at $(date '+%Y-%m-%d %H:%M:%S')"
      - name: Pull changes
        run: git pull -r
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TV_TOKEN }}

